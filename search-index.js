var searchIndex = new Map(JSON.parse('[\
["egg",{"t":"RKKFFFPPKFFPRKRFRFFFPGPPRFFIFKFPFFKPGRKKKKFFGPPPFPIPFGFFKPFFIPFKFFGFFFPIFIFPPNNNNNNNNNNNNONNOOONNNNNMNNNNNOONMNNMNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNOMNNOOMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONMNNNNOONNNNNNNQNNNNNNMNNNNNOOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNMNNNNNNNMMNMNNNMNMNNNNNMNMNNOMHHHNNQNNOONNNNNNNNNNNNNNOOMNONONNNNNNNNNNNNNNNOOONNNQNONNNNNNNNNNMNNNNNNNOONNNNONNNNNNNNNNNNNNNOOOOQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCC","n":["A2","Analysis","Applier","AstDepth","AstSize","BackoffScheduler","BadOp","BadSexp","Condition","ConditionEqual","ConditionalApplier","Congruence","Cost","CostFunction","Data","DidMerge","Discriminant","Dot","EClass","EGraph","ENode","ENodeOrVar","EmptySexp","Err","Error","Explanation","Extractor","FlatExplanation","FlatTerm","FromOp","FromOpError","HeadList","Id","Iteration","IterationData","IterationLimit","Justification","L2","Language","LanguageChildren","LanguageMapper","LpCostFunction","LpExtractor","MultiPattern","MultiPatternParseError","NodeLimit","Ok","Other","Pattern","PatternAssignmentError","PatternAst","PatternParseError","RecExpr","RecExprParseError","Report","Rewrite","RewriteScheduler","Rule","Runner","RunnerLimits","RunnerResult","Saturated","SearchMatches","Searcher","SimpleLanguageMapper","SimpleScheduler","StopReason","Subst","Symbol","SymbolLang","TimeLimit","TreeExplanation","TreeTerm","UnionEqualities","Var","Var","VariableError","add","add","add_expr","add_expr_uncanonical","add_instantiation","add_uncanonical","all","all","allow_ematching_cycles","allow_ematching_cycles","alpha_rename","alpha_rename","analysis","any","any","applied","applier","applier","apply","apply_matches","apply_matches","apply_matches","apply_matches","apply_one","apply_one","apply_one","apply_one","apply_rewrite","apply_rewrite","apply_time","apply_time","are_explanations_enabled","as_mut_slice","as_mut_slice","as_ref","as_slice","as_slice","as_str","as_u32","assert_unique_leaves","ast","ast","backward_rule","backward_rule","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_recexpr","build_recexpr","can_be_length","can_be_length","can_stop","can_stop","can_stop","check","check","check_goals","check_limits","check_proof","child_proofs","children","children","children","children","children","children_mut","children_mut","children_mut","classes","classes_mut","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","condition","config","copy_without_unions","cost","cost","cost","cost_rec","cost_rec","data","data","default","default","default","default","default","default","default","define_language","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discriminant","discriminant","discriminant","do_not_ban","dot","dump","eclass","egraph","egraph_classes","egraph_classes","egraph_intersect","egraph_nodes","egraph_nodes","egraph_union","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivs","explain_equivalence","explain_equivalence","explain_existance","explain_existance","explain_existance_pattern","explain_existance_pattern","explain_id_equivalence","explain_matches","explain_matches","explanation_trees","find","find_best","find_best_cost","find_best_node","flatten_explanation","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","for_each_mut","for_each_mut","forward_rule","forward_rule","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_op","from_op","from_op","from_str","from_str","from_str","from_str","from_str","from_u32","from_vec","from_vec","get","get_explanation_num_nodes","get_flat_string","get_flat_strings","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_initial_flat_term","get_last_flat_term","get_num_congr","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_recexpr","get_string","get_string","get_string_with_let","get_tree_size","get_union_equalities","has_rewrite_backward","has_rewrite_forward","hash","hash","hash","hash","hash","hash","hash","hash","hook_time","hooks","id","id_to_expr","id_to_node","id_to_pattern","index","index","index","index_mut","index_mut","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_dag","is_empty","is_empty","is_empty","is_empty","is_leaf","is_leaf","iter","iterations","iterations","join_recexprs","join_recexprs","leaf","leaves","len","len","len","len","len","lookup","lookup_expr","lookup_expr_ids","make","make","make_flat_explanation","map_analysis","map_analysis","map_children","map_children","map_data","map_data","map_discriminant","map_discriminant","map_eclass","map_eclass","map_egraph","map_egraph","map_node","map_node","matches","matches","matches","memo_size","merge","merge_max","merge_min","merge_option","modify","modify","multi_rewrite","n_matches","n_matches","n_rebuilds","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","node","node","node_cost","node_cost","nodes","number_of_classes","op","parents","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_union","pre_union","pretty","pretty","print_report","rebuild","rebuild_time","rebuild_time","rebuilds","remove_rewrites","report","rewrite","rewrite","root","roots","rule_ban_length","rule_match_limit","run","run","run_dot","search","search","search","search_eclass","search_eclass","search_eclass_with_limit","search_eclass_with_limit","search_eclass_with_limit","search_rewrite","search_rewrite","search_rewrite","search_rewrites","search_rewrites","search_time","search_time","search_with_limit","search_with_limit","search_with_limit","search_with_limit","searcher","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_analysis_data","solve","solve_multiple","source","source","stop_reason","stop_reason","stop_reason","substs","test_fn","timeout","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pdf","to_png","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_svg","total_number_of_nodes","total_size","total_time","total_time","try_build_recexpr","try_build_recexpr","try_for_each","try_for_each","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tutorials","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union_instantiations","union_trusted","update_children","update_children","use_anchors","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","with_anchors","with_ban_length","with_capacity","with_config_line","with_egraph","with_explanation_length_optimization","with_explanation_length_optimization","with_explanations_disabled","with_explanations_disabled","with_explanations_enabled","with_explanations_enabled","with_expr","with_hook","with_initial_match_limit","with_iter_limit","with_node_limit","with_scheduler","with_time_limit","without_explanation_length_optimization","without_explanation_length_optimization","_01_background","_02_getting_started","_03_explanations"],"q":[[0,"egg"],[886,"egg::tutorials"],[889,"egg::egraph"],[890,"egg::language"],[891,"egg::pattern"],[892,"egg::subst"],[893,"core::fmt"],[894,"core::clone"],[895,"core::cmp"],[896,"core::hash"],[897,"core::ops::function"],[898,"egg::rewrite"],[899,"alloc::vec"],[900,"egg::multipattern"],[901,"core::option"],[902,"egg::run"],[903,"egg::eclass"],[904,"egg::explain"],[905,"core::iter::traits::collect"],[906,"core::iter::traits::exact_size"],[907,"egg::extract"],[908,"core::default"],[909,"core::result"],[910,"serde::de"],[911,"core::convert"],[912,"egg::dot"],[913,"alloc::string"],[914,"core::marker"],[915,"num_bigint::biguint"],[916,"fxhash"],[917,"indexmap::map"],[918,"core::iter::traits::iterator"],[919,"core::borrow"],[920,"egg::lp_extract"],[921,"std::io::error"],[922,"std::ffi::os_str"],[923,"serde::ser"],[924,"core::error"],[925,"std::path"],[926,"core::any"],[927,"core::time"]],"i":[98,0,0,0,0,0,79,79,0,0,0,48,57,0,4,0,3,0,0,0,17,0,79,42,77,0,0,0,0,0,0,79,0,0,0,51,0,98,0,0,0,0,0,0,0,51,42,51,0,80,0,80,0,0,0,0,0,48,0,0,0,51,0,0,0,0,0,0,0,0,51,0,0,0,0,17,80,1,5,1,1,1,1,3,3,4,4,6,5,1,3,3,53,18,27,18,22,22,24,25,22,24,25,27,29,29,52,53,1,31,2,5,31,2,23,33,35,25,19,49,50,37,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,3,3,31,2,29,29,38,28,39,1,41,43,49,3,46,17,50,46,3,46,17,1,1,1,23,35,1,48,49,50,5,46,24,25,17,18,27,51,52,53,33,7,2,23,35,1,48,49,50,5,46,24,25,17,18,27,51,52,53,33,7,2,23,5,46,17,33,7,2,27,68,1,57,59,60,57,57,35,53,61,62,1,5,38,7,2,0,23,35,1,48,46,2,3,46,17,38,1,1,19,62,52,53,1,52,53,1,23,48,50,5,46,24,25,17,33,7,2,23,23,48,48,50,50,5,5,46,46,24,24,25,25,17,17,33,33,7,7,2,2,1,62,1,62,1,62,1,1,62,1,43,1,71,71,71,49,68,68,23,23,43,62,35,1,48,49,49,50,50,71,59,60,78,78,5,5,79,79,46,46,24,80,80,25,25,17,17,19,18,27,39,41,51,52,52,53,81,38,33,33,7,2,2,3,3,3,3,3,3,49,50,68,23,23,23,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,5,79,46,24,80,25,25,25,25,17,19,18,27,39,41,51,52,53,81,38,33,33,7,2,2,77,46,17,23,5,24,25,33,33,31,2,7,1,43,43,23,48,5,46,17,33,7,2,49,49,1,87,87,22,22,25,25,27,50,43,50,43,43,1,50,50,23,48,5,46,17,33,7,2,53,62,35,1,1,1,1,5,7,1,5,7,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,5,31,31,35,1,3,3,35,62,52,3,3,46,35,31,3,3,35,2,1,1,1,4,70,43,98,61,3,3,98,61,98,61,98,98,98,98,98,61,3,46,17,52,4,0,0,0,4,4,0,87,87,53,18,23,43,102,62,1,49,50,71,78,46,24,25,18,39,49,50,103,59,35,1,46,35,39,23,5,46,17,33,7,2,4,4,5,25,62,1,52,53,52,50,62,50,0,5,62,38,38,68,62,68,87,87,18,87,87,87,24,25,29,29,38,29,29,52,53,87,87,25,18,18,23,35,1,48,5,46,51,52,53,2,1,102,102,79,80,62,52,53,19,0,102,68,23,35,1,48,49,50,5,46,24,25,17,18,27,51,52,53,33,7,2,68,68,68,23,43,49,50,78,5,79,46,80,25,17,52,33,2,68,1,1,52,53,3,3,3,3,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,0,68,23,61,43,37,102,62,35,1,48,49,50,71,59,60,78,5,79,46,24,80,25,17,19,18,27,39,41,51,52,53,81,38,33,7,2,1,1,1,3,3,68,87,22,22,28,28,24,24,25,25,25,27,39,68,38,7,68,62,62,1,62,1,62,1,62,62,38,62,62,62,62,62,1,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````{{{b{ce}}c}df{{h{c}}}}{{{j{c}}c}df}{{{b{ce}}{j{c}}}df{{h{c}}}}0{{{b{ce}}{l{c}}n}df{{h{c}}}}3{{{f{}{{A`{c}}}}e}Ab{AdAfAhAj}{{An{d}{{Al{Ab}}}}}}0{{{h{}{{B`{c}}}}}AbAd}0{{{l{c}}}{{l{c}}}f}{{{j{{Bb{c}}}}}{{j{{Bb{c}}}}}f}`33```{{{Bd{ce}}{b{ce}}{Bh{{Bf{c}}}}}{{Bj{d}}}f{{h{c}}}}{{Bl{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}0{{{C`{c}}{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{Bl{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{C`{c}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cf{gi}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{CjCl{b{ce}}{Bd{ce}}{Bj{{Bf{c}}}}}Clf{{h{c}}}}0``{{{b{ce}}}Abf{{h{c}}}}{Cn{{Bh{d}}}}{d{{Bh{d}}}}{{{j{c}}}{{Bh{c}}}{}}21{BnD`}{Db{{Cd{Dd}}}}{{{Df{ce}}}Dh{ff}{}}````{{DjDj}c{}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000{{{f{}{{A`{c}}}}e}{{j{{f{}{{A`{c}}}}}}}{AdAfAhAj}{{An{d}{{Al{{f{}{{A`{c}}}}}}}}}}0{ClAb}0{{CjCl}Ab}0{{DlCl}Ab}{{Ch{b{ce}}dn}Abf{{h{c}}}}{{{Dn{c}}{b{ce}}dn}Abf{{h{c}}}}{{{b{ce}}d{Bh{{Cb{c}}}}}Dh{fE`}{{h{c}}}}{{EbCl{b{ce}}}{{Ed{Dh}}}f{{h{c}}}}{{{Ef{c}}g}Dhf{{h{c}}}{{Ej{}{{Eh{{Bd{ce}}}}}}}}`{{{f{}{{A`{c}}}}}{{Bh{d}}}{AdAfAhAj}}{El{{Bh{d}}}}{{{Bb{c}}}{{Bh{d}}}f}``210{{{b{ce}}}{{`{{En{}{{Eh{{Df{c}}}}}}}}}f{{h{c}}}}0`{BnBn}{{{Df{ce}}}{{Df{ce}}}AfAf}{{{b{ce}}}{{b{ce}}}{Aff}{Af{h{c}}}}{F`F`}{{{Fb{c}}}{{Fb{c}}}{Aff}}{{{Fd{c}}}{{Fd{c}}}{Aff}}{{{j{c}}}{{j{c}}}Af}{ElEl}{{{C`{c}}}{{C`{c}}}Af}{{{Cb{c}}}{{Cb{c}}}Af}{{{Bb{c}}}{{Bb{c}}}Af}{{{Bd{ce}}}{{Bd{ce}}}AfAf}{{{Cf{ce}}}{{Cf{ce}}}AfAf}{FfFf}{FhFh}{{{Fj{c}}}{{Fj{c}}}Af}{DbDb}{nn}{dd}{{ce}Dh{}{}}000000000000000000{{BnBn}Fl}{{{j{c}}{j{c}}}FlFn}{{ElEl}Fl}{{{Bb{c}}{Bb{c}}}FlFn}{{DbDb}Fl}{{nn}Fl}{{dd}Fl}``{{{b{ce}}e}{{b{ce}}}f{{h{c}}}}{{{Gb{}{{G`{c}}}}eg}c{GdAdAf}f{{An{d}{{Al{c}}}}}}{{Gfcg}ef{}{{An{d}{{Al{e}}}}}}{{Ghcg}ef{}{{An{d}{{Al{e}}}}}}{{{Gb{}{{G`{c}}}}{j{e}}}c{GdAdAf}f}0``{{}{{Gj{ce}}}{}{}}{{}{{Gl{ceDh}}}f{{h{c}}Gn}}{{}{{b{ce}}}f{{h{c}}Gn}}{{}{{j{c}}}{}}{{}Dl}{{}n}{{}d}`{c{{H`{Bn}}}Hb}{c{{H`{{Df{eg}}}}}HbHdHd}{c{{H`{{b{eg}}}}}Hb{Hdf}{Hd{h{e}}}}{c{{H`{F`}}}Hb}{c{{H`{El}}}Hb}{c{{H`{d}}}Hb}{{{f{}{{A`{c}}}}}c{AdAfAhAj}}{Elc{}}{{{Bb{c}}}ef{}}{{Dlc}Dl{{Hf{Bn}}}}{{{b{ce}}}{{Hh{ce}}}f{{h{c}}}}{{{b{ce}}}{{`{Ad}}}f{{h{c}}}}````{{{b{ce}}{b{ce}}e}{{b{ce}}}f{{h{c}}}}``{{{b{ce}}{b{ce}}}Dhf{{h{c}}}}{{BnBn}Ab}{{F`F`}Ab}{{{Fd{c}}{Fd{c}}}Abf}{{{j{c}}{j{c}}}AbHj}{{ElEl}Ab}{{{C`{c}}{C`{c}}}AbHj}{{{Cb{c}}{Cb{c}}}AbHj}{{{Bb{c}}{Bb{c}}}AbHj}{{DbDb}Ab}{{nn}Ab}{{dd}Ab}{{ce}Ab{}{}}000000000000000000000{{{b{ce}}{j{c}}{j{c}}}{{Bj{d}}}f{{h{c}}}}{{{Gl{ceg}}{j{c}}{j{c}}}{{Ef{c}}}f{{h{c}}}{{Hl{ce}}}}{{{b{ce}}{j{c}}{j{c}}}{{Ef{c}}}f{{h{c}}}}{{{Gl{ceg}}{j{c}}}{{Ef{c}}}f{{h{c}}}{{Hl{ce}}}}{{{b{ce}}{j{c}}}{{Ef{c}}}f{{h{c}}}}{{{Gl{ceg}}{l{c}}n}{{Ef{c}}}f{{h{c}}}{{Hl{ce}}}}{{{b{ce}}{l{c}}n}{{Ef{c}}}f{{h{c}}}}{{{b{ce}}dd}{{Ef{c}}}f{{h{c}}}}{{{Gl{ceg}}{j{c}}{l{c}}n}{{Ef{c}}}f{{h{c}}}{{Hl{ce}}}}{{{b{ce}}{j{c}}{l{c}}n}{{Ef{c}}}f{{h{c}}}}`{{{b{ce}}d}df{{h{c}}}}{{{Hn{ecg}}d}{{I`{{j{c}}}}}f{{Gb{c}}}{{h{c}}}}{{{Hn{ecg}}d}{}f{{Gb{c}}}{{h{c}}}}{{{Hn{ecg}}d}cf{{Gb{c}}}{{h{c}}}}{{{Fb{c}}}{{Ib{c}}}f}{{{Hh{ce}}Id}If{fE`}{{h{c}}}}{{{Hh{ce}}Id}Iff{{h{c}}}}{{BnId}{{H`{DhIh}}}}0{{{Ef{c}}Id}If{fE`Ij}}{{{Gl{ceg}}Id}Iff{{h{c}}}Ad}{{{Df{ce}}Id}IfAdAd}{{{b{ce}}Id}Iff{{h{c}}}}{{F`Id}If}{{{Fb{c}}Id}If{Adf}}{{{Fb{c}}Id}If{fE`Ij}}{{{Fd{c}}Id}If{Adf}}{{{Fd{c}}Id}If{fE`Ij}}{{{Hn{ecg}}Id}If{Adf}{Ad{Gb{c}}}{Ad{h{c}}}}{{GfId}If}{{GhId}If}{{IlId}If}0{{{j{c}}Id}If{fE`}}{{{j{c}}Id}IfAd}{{{In{c}}Id}IfE`}{{{In{c}}Id}IfAd}{{ElId}If}0{{{C`{c}}Id}IfAd}{{{J`{c}}Id}IfAd}{{{J`{c}}Id}IfE`}{{{Cb{c}}Id}IfAd}{{{Cb{c}}Id}If{fE`}}{{{Bb{c}}Id}IfAd}{{{Bb{c}}Id}If{fE`}}{{{Bf{c}}Id}If{Adf}}{{{Bd{ce}}Id}If{fE`}{{h{c}}}}{{{Cf{ce}}Id}IfAdAd}{{{Dn{c}}Id}IfAd}{{EbId}If}{{FfId}If}{{FhId}If}0{{{Fj{c}}Id}IfAd}{{JbId}If}{{DlId}If}{{DbId}If}0{{nId}If}{{dId}If}0{{{f{}{{A`{c}}}}eg}e{AdAfAhAj}Af{{An{ed}{{Al{e}}}}}}0{{{f{}{{A`{c}}}}e}Dh{AdAfAhAj}{{An{d}}}}000``{cc{}}{D`Bn}{JdBn}2022222222222222{{{Bj{c}}}{{j{c}}}{}}33333{{{l{c}}}{{Cb{c}}}f}{{{j{c}}}{{Cb{c}}}f}{{{Bh{c}}}{{Cb{c}}}f}666666666666{DdDb}777{Cld}{{D`{Bj{d}}}{{H`{{Ij{}{{Jf{c}}}}c}}}Ad}{{D`{Bj{d}}}{{H`{Elc}}}{}}{{D`{Bj{d}}}{{H`{{Bb{c}}e}}}Ij{}}{D`{{H`{Bn}}}}{D`{{H`{{j{c}}e}}}Ij{}}{D`{{H`{{C`{c}}e}}}{fIj}{}}{D`{{H`{{Cb{c}}e}}}Ij{}}{D`{{H`{Dbc}}}{}}9{{{Bj{d}}}Cn}{{{Bj{d}}}d}{{nDb}{{Cd{d}}}}{{{b{ce}}}Clf{{h{c}}}}{{{Ef{c}}}Jd{fE`Ij}}{{{Ef{c}}}{{Bj{Jd}}}{fE`Ij}}{{ce}Jh{AjJj}Jl}0000000{{{Fb{c}}}{{Fd{c}}}f}04{Jn{{Cd{{l{c}}}}}f}0{Bl{{Cd{{l{c}}}}}f}0{{{Cb{c}}}{{Cd{{l{c}}}}}f}0{{{Cf{gi}}}{{Cd{{l{c}}}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{{Fd{c}}}{{j{c}}}{fE`Ij}}8{{{Fd{c}}}Jd{fE`Ij}}9{{{Ef{c}}}K`{fE`Ij}}{{{b{ce}}}Kbf{{h{c}}}}{{{Fd{c}}}Abf}0{{Bnc}DhKd}{{F`c}DhKd}{{{j{c}}e}DhAjKd}{{Elc}DhKd}{{{Bb{c}}e}DhAjKd}{{Dbc}DhKd}{{nc}DhKd}{{dc}DhKd}```{{{b{ce}}d}{{j{c}}}f{{h{c}}}}{{{b{ce}}d}cf{{h{c}}}}{{{b{ce}}d{Kh{ddKf}}}{{I`{{Cb{c}}n}}}f{{h{c}}}}{{{b{ce}}d}gf{{h{c}}}{}}{{{j{c}}d}cf}{{nDb}c{}}21{{nDbd}{{Cd{d}}}}{ce{}{}}00000000000000000000000000000000000{{{j{c}}}Abf}{CnAb}0{{{Df{ce}}}Ab{}{}}{{{b{ce}}}Abf{{h{c}}}}{{{f{}{{A`{c}}}}}Ab{AdAfAhAj}}0{{{Df{ce}}}{{`{{En{}{{Eh{c}}}}}}}{}{}}``{{{f{}{{A`{c}}}}g}{{j{{f{}{{A`{c}}}}}}}{AdAfAhAj}{{Kj{{Bh{{f{}{{A`{c}}}}}}}}}{{An{d}{{Al{e}}}}}}0{cEl{{Hf{Bn}}}}{{{Df{ce}}}{{`{{Kl{}{{Eh{c}}}}}}}f{}}{CnCl}{{{f{}{{A`{c}}}}}Cl{AdAfAhAj}}0{{{Df{ce}}}Cl{}{}}{dCl}{{{b{ce}}g}{{Cd{d}}}f{{h{c}}}{{Kn{c}}}}{{{b{ce}}{j{c}}}{{Cd{d}}}f{{h{c}}}}{{{b{ce}}{j{c}}}{{Cd{{Bj{d}}}}}f{{h{c}}}}{{{b{c{h{}{{B`{e}}}}}}c}efAd}{{{Gl{ceHl}}}Hlf{{h{c}}}}{{{Ef{c}}}{{Ib{c}}}f}{{{Ld{}{{L`{c}}{Lb{e}}}}i}ef{{h{c}}}f{{h{g}}}}{{{Gj{ei}}g}kf{f{Lf{c}}}{{h{c}}}{{h{e}}{Lf{g}}}{}}{{{f{}{{A`{c}}}}e}{{f{}{{A`{c}}}}}{AdAfAhAj}{{An{d}{{Al{d}}}}}}0{{{Ld{}{{L`{c}}{Lb{e}}}}}{}f{{h{c}}}}{{{Gj{ei}}}{}f{f{Lf{c}}}{{h{c}}}{{h{e}}{Lf{g}}}}10{{{Ld{}{{L`{c}}{Lb{e}}}}{Df{g}}}{{Df{c}}}f{{h{c}}}f}0{{{Ld{}{{L`{c}}{Lb{e}}}}{b{gi}}}{{b{ce}}}f{{h{c}}}f{{h{g}}}}0{{{Ld{}{{L`{c}}{Lb{e}}}}g}cf{{h{c}}}f}{{{Gj{ei}}c}kf{f{Lf{c}}}{{h{c}}}{{h{e}}{Lf{g}}}{}}{{{f{}{{A`{c}}}}{f{}{{A`{c}}}}}Ab{AdAfAhAj}}{{ElEl}Ab}{{{Bb{c}}{Bb{c}}}Abf}`{{{h{}{{B`{c}}}}cc}DjAd}{{cc}DjFn}0{{{Cd{c}}{Cd{c}}e}Dj{}{{Lh{cc}{{Al{Dj}}}}}}{{{b{c{h{}{{B`{e}}}}}}d}DhfAd}0`{{Jn{b{ce}}}Clf{{h{c}}}}0``{cBn{{Kj{D`}}}}{{{Lj{c}}}{{Ef{c}}}f}{{{b{ce}}g}{{Ll{ce}}}f{{h{c}}}{{Ln{ce}}}}{e{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}{e{{b{ce}}}f{{h{c}}}}{{c{Bj{{Lj{c}}}}}{{Fb{c}}}f}{{c{Ib{c}}}{{Fd{c}}}f}{{{b{ce}}g}{{Hn{gce}}}f{{h{c}}}{{Gb{c}}}}{{D`{Bj{d}}}Il}{{c{Bj{d}}}El{{Hf{Bn}}}}{{{Bj{{I`{Db{l{c}}}}}}}{{C`{c}}}f}{{{l{c}}}{{Cb{c}}}f}{{cik}{{H`{{Bd{eg}}Jd}}}{{Hf{Bn}}}f{{h{e}}}{{Jn{eg}}M`Mb}{{Bl{eg}}M`Mb}}{{{Cb{c}}{Cb{c}}}{{Dn{c}}}f}``{{Ln{b{ce}}dc}Mdf{{h{c}}}}{{Gf{b{ce}}dc}Mdf{{h{c}}}}`{{{b{ce}}}Clf{{h{c}}}}`{{{Df{ce}}}{{`{{En{}{{Eh{d}}}}}}}{}{}}{{D`D`}{{Dn{c}}}Ij}{{BnBn}{{Cd{Fl}}}}{{{j{c}}{j{c}}}{{Cd{Fl}}}Gd}{{ElEl}{{Cd{Fl}}}}{{{Bb{c}}{Bb{c}}}{{Cd{Fl}}}Gd}{{DbDb}{{Cd{Fl}}}}{{nn}{{Cd{Fl}}}}{{dd}{{Cd{Fl}}}}{{{b{c{h{}{{B`{e}}}}}}dd{Cd{F`}}}DhfAd}0{{{j{c}}Cl}Jd{fE`}}{{{Cb{c}}Cl}Jd{fE`}}{{{Gl{ceg}}}Dhf{{h{c}}}{{Hl{ce}}}}=```{{{Fd{c}}}{{Fd{c}}}f}{{{Gl{ceg}}}Fhf{{h{c}}}{{Hl{ce}}}}{{{Fd{c}}{l{c}}{l{c}}}{{Fd{c}}}f}`{{{j{c}}}df}`{{DlcCl}Dl{{Hf{Bn}}}}0{{{Hh{ce}}gk}{{Mf{Dh}}}{fE`}{{h{c}}}{{Kj{Mh}}}{{Kj{Mh}}}{{Ej{}{{Eh{i}}}}}}{{{Gl{ceg}}i}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}{{Ej{}{{Eh{{Bd{ce}}}}}}}}{{{Hh{ce}}i}{{Mf{Dh}}}{fE`}{{h{c}}}{{Kj{Mh}}}{{Ej{}{{Eh{g}}}}}}{{Jn{b{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{{Bd{ce}}{b{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}{{Jn{b{ce}}d}{{Cd{{Bf{c}}}}}f{{h{c}}}}0{{Jn{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{{C`{c}}{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{CjCl{b{ce}}{Bd{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{DlCl{b{ce}}{Bd{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}{{CjCl{b{ce}}{Bh{{Bd{ce}}}}Eb}{{Ed{{Bj{{Bj{{Bf{c}}}}}}}}}f{{h{c}}}}0``{{Jn{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{{Cb{c}}{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}{{{Bd{ce}}{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}`{{Bnc}H`Mj}{{{Df{ce}}g}H`MlMlMj}{{{b{ce}}g}H`{Mlf}{Ml{h{c}}}Mj}{{F`c}H`Mj}{{{j{c}}e}H`{fE`}Mj}{{Elc}H`Mj}{{Ffc}H`Mj}{{Fhc}H`Mj}{{{Fj{c}}e}H`MlMj}{{dc}H`Mj}{{{b{ce}}d}Dhf{{h{c}}}}{{{Ll{ce}}d}{{j{c}}}f{{h{c}}}}{{{Ll{ce}}{Bh{d}}}{{I`{{j{c}}{Bj{d}}}}}f{{h{c}}}}{{{In{c}}}{{Cd{Mn}}}Mn}{{{J`{c}}}{{Cd{Mn}}}Mn}`````{{{Ll{ce}}Md}{{Ll{ce}}}f{{h{c}}}}{{{Hh{ce}}g}{{Mf{Dh}}}{fE`}{{h{c}}}{{Kj{N`}}}}{ce{}{}}00000000000000000011{cJd{}}000000000000002{{{b{ce}}}Clf{{h{c}}}}0``{{{f{}{{A`{c}}}}g}{{H`{{j{{f{}{{A`{c}}}}}}e}}}{AdAfAhAj}{}{{An{d}{{Al{{H`{{f{}{{A`{c}}}}e}}}}}}}}0{{{f{}{{A`{c}}}}g}{{H`{Dhe}}}{AdAfAhAj}Af{{An{d}{{Al{{H`{Dhe}}}}}}}}0{c{{H`{e}}}{}{}}000000000000000{{{Cb{c}}}{{H`{{j{c}}e}}}f{}}11111111111111111111111111111111111111111111111111111111`{cNb{}}00000000000000000000000000000000000{{{b{ce}}dd}Abf{{h{c}}}}{{{b{ce}}{l{c}}{l{c}}ng}{{I`{dAb}}}f{{h{c}}}{{Hf{Bn}}}}{{{b{ce}}ddg}Abf{{h{c}}}{{Hf{Bn}}}}{{{f{}{{A`{c}}}}e}Dh{AdAfAhAj}{{An{d}{{Al{d}}}}}}0`{Jn{{Bj{Db}}}}{Bl{{Bj{Db}}}}0{Ch{{Bj{Db}}}}0{{{C`{c}}}{{Bj{Db}}}f}0{{{Cb{c}}}{{Bj{Db}}}f}00{{{Cf{gi}}}{{Bj{Db}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{{Dn{c}}}{{Bj{Db}}}f}{{{Hh{ce}}Ab}{{Hh{ce}}}{fE`}{{h{c}}}}{{DlCl}Dl}{Cln}{{{Hh{ce}}g}{{Hh{ce}}}{fE`}{{h{c}}}{{Hf{Jd}}}}{{{Gl{ceg}}{b{ce}}}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}{{{Gl{ceg}}}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}{{{b{ce}}}{{b{ce}}}f{{h{c}}}}1010{{{Gl{ceg}}{j{c}}}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}{{{Gl{ceg}}i}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}{{An{{Gl{ceg}}}{{Al{{H`{DhJd}}}}}}}}7{{{Gl{ceg}}Cl}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}0{{{Gl{ceg}}i}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}{{Cj{ce}}}}{{{Gl{ceg}}Nd}{{Gl{ceg}}}f{{h{c}}}{{Hl{ce}}}}65```","D":"CEl","p":[[5,"EGraph",0,889],[5,"Id",0],[10,"Language",0,890],[10,"Analysis",0,890],[5,"RecExpr",0,890],[8,"PatternAst",0,891],[5,"Subst",0,892],[17,"Discriminant"],[1,"bool"],[10,"Debug",893],[10,"Clone",894],[10,"Eq",895],[10,"Hash",896],[17,"Output"],[10,"FnMut",897],[17,"Data"],[6,"ENodeOrVar",0,891],[5,"Rewrite",0,898],[5,"SearchMatches",0,891],[1,"slice"],[5,"Vec",899],[10,"Applier",0,898],[5,"Symbol",0],[5,"MultiPattern",0,900],[5,"Pattern",0,891],[6,"Option",901],[5,"ConditionalApplier",0,898],[10,"Condition",0,898],[10,"RewriteScheduler",0,902],[1,"usize"],[10,"LanguageChildren",0,890],[1,"str"],[5,"Var",0,892],[1,"u32"],[5,"EClass",0,903],[1,"unit"],[5,"DidMerge",0,890],[5,"BackoffScheduler",0,902],[5,"ConditionEqual",0,898],[10,"Display",893],[5,"RunnerLimits",0,902],[8,"RunnerResult",0,902],[5,"Explanation",0,904],[17,"Item"],[10,"IntoIterator",905],[5,"SymbolLang",0,890],[10,"ExactSizeIterator",906],[6,"Justification",0,904],[5,"TreeTerm",0,904],[5,"FlatTerm",0,904],[6,"StopReason",0,902],[5,"Report",0,902],[5,"Iteration",0,902],[6,"Ordering",895],[10,"Ord",895],[17,"Cost"],[10,"CostFunction",0,907],[10,"PartialOrd",895],[5,"AstSize",0,907],[5,"AstDepth",0,907],[5,"SimpleLanguageMapper",0,889],[5,"Runner",0,902],[10,"Default",908],[6,"Result",909],[10,"Deserializer",910],[10,"Deserialize",910],[10,"Into",911],[5,"Dot",0,912],[10,"PartialEq",895],[10,"IterationData",0,902],[5,"Extractor",0,907],[1,"tuple"],[8,"FlatExplanation",0,904],[5,"Formatter",893],[8,"Result",893],[5,"Error",893],[10,"FromOp",0,890],[5,"FromOpError",0,890],[6,"RecExprParseError",0,890],[6,"MultiPatternParseError",0,900],[5,"SimpleScheduler",0,902],[5,"String",913],[17,"Error"],[1,"u64"],[10,"Sized",914],[10,"BuildHasher",896],[10,"Searcher",0,898],[5,"BigUint",915],[8,"UnionEqualities",0,904],[10,"Hasher",896],[8,"FxBuildHasher",916],[5,"IndexMap",917],[10,"AsRef",911],[10,"Iterator",918],[10,"BorrowMut",919],[17,"L2"],[17,"A2"],[10,"LanguageMapper",0,889],[10,"From",911],[10,"FnOnce",897],[8,"TreeExplanation",0,904],[5,"LpExtractor",0,920],[10,"LpCostFunction",0,920],[10,"Send",914],[10,"Sync",914],[1,"f64"],[8,"Result",921],[5,"OsStr",922],[10,"Serializer",923],[10,"Serialize",923],[10,"Error",924],[5,"Path",925],[5,"TypeId",926],[5,"Duration",927]],"r":[[1,890],[2,898],[3,907],[4,907],[5,902],[8,898],[9,898],[10,898],[13,907],[15,890],[17,912],[18,903],[19,889],[21,891],[25,904],[26,907],[27,904],[28,904],[29,890],[30,890],[33,902],[34,902],[36,904],[38,890],[39,890],[40,889],[41,920],[42,920],[43,900],[44,900],[48,891],[50,891],[52,890],[53,890],[54,902],[55,898],[56,902],[58,902],[59,902],[60,902],[62,891],[63,898],[64,889],[65,902],[66,902],[67,892],[69,890],[71,904],[72,904],[73,904],[74,892],[591,890],[592,890],[593,890]],"b":[[350,"impl-Display-for-Dot%3C\'a,+L,+N%3E"],[351,"impl-Debug-for-Dot%3C\'a,+L,+N%3E"],[352,"impl-Display-for-GlobalSymbol"],[353,"impl-Debug-for-GlobalSymbol"],[359,"impl-Debug-for-TreeTerm%3CL%3E"],[360,"impl-Display-for-TreeTerm%3CL%3E"],[361,"impl-Debug-for-FlatTerm%3CL%3E"],[362,"impl-Display-for-FlatTerm%3CL%3E"],[366,"impl-Debug-for-FromOpError"],[367,"impl-Display-for-FromOpError"],[368,"impl-Display-for-RecExpr%3CL%3E"],[369,"impl-Debug-for-RecExpr%3CL%3E"],[370,"impl-Display-for-RecExprParseError%3CE%3E"],[371,"impl-Debug-for-RecExprParseError%3CE%3E"],[372,"impl-Debug-for-SymbolLang"],[373,"impl-Display-for-SymbolLang"],[375,"impl-Debug-for-MultiPatternParseError%3CE%3E"],[376,"impl-Display-for-MultiPatternParseError%3CE%3E"],[377,"impl-Debug-for-Pattern%3CL%3E"],[378,"impl-Display-for-Pattern%3CL%3E"],[379,"impl-Debug-for-ENodeOrVar%3CL%3E"],[380,"impl-Display-for-ENodeOrVar%3CL%3E"],[387,"impl-Debug-for-Report"],[388,"impl-Display-for-Report"],[392,"impl-Debug-for-Var"],[393,"impl-Display-for-Var"],[395,"impl-Debug-for-Id"],[396,"impl-Display-for-Id"],[406,"impl-From%3C%26str%3E-for-GlobalSymbol"],[407,"impl-From%3C%26String%3E-for-GlobalSymbol"],[409,"impl-From%3CString%3E-for-GlobalSymbol"],[430,"impl-From%3CRecExpr%3CENodeOrVar%3CL%3E%3E%3E-for-Pattern%3CL%3E"],[431,"impl-From%3C%26RecExpr%3CL%3E%3E-for-Pattern%3CL%3E"],[432,"impl-From%3C%26%5BL%5D%3E-for-Pattern%3CL%3E"],[480,"impl-Applier%3CL,+A%3E-for-Pattern%3CL%3E"],[481,"impl-Searcher%3CL,+A%3E-for-Pattern%3CL%3E"],[859,"impl-Searcher%3CL,+A%3E-for-MultiPattern%3CL%3E"],[860,"impl-Applier%3CL,+A%3E-for-MultiPattern%3CL%3E"],[861,"impl-Pattern%3CL%3E"],[862,"impl-Searcher%3CL,+A%3E-for-Pattern%3CL%3E"],[863,"impl-Applier%3CL,+A%3E-for-Pattern%3CL%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMsBOABjAAEAZgACAGsAAABvAAEAcgAAAHoASADGAAAAyQAAAMsAAADRAAEA1gABANsALAAMAQEAEgEGABoBBQAhAQEAKAEAACsBAAAuASAAXwEuAJcBAQCaAQAAqQEAAK8BAgC+AQAAwgEAAMQBBgDNAQAA0gEHAOEBAgDsAQcA+gEEADYCAAA+AgAAQgIAAEQCAABKAgAATAICAGsCAABxAgYAfgIAAIACAACSAgEAlgIAAJkCAACdAgAAoAIJAK0CAQCwAgAAtgISAMsCDgDdAgAA4wJIAC0DIwBcAwEAXwMDAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
